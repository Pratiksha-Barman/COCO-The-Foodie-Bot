{
  "name": "FoodieBot-action",
  "type": "action",
  "counts": {
    "actions": 6,
    "intents": 3,
    "entities": 7,
    "data_types": 0,
    "collections": 0,
    "global_variables": 0
  },
  "status": "Available",
  "language": "en",
  "skill_id": "2e82a251-0468-4667-8353-84405532d36b",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_12201",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_922",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Welcome to Delicious Den! Our restaurant, founded by a passionate couple who love food, operates from 10 am to 10 pm daily. We pride ourselves on using fresh, local produce to create our dishes, ensuring quality and supporting local farmers. Currently, we have one location where we serve our delightful meals. While we do not open for breakfast,"
                          },
                          {
                            "scalar": " we do offer delivery services so you can enjoy our delicious food at your convenience. Come and experience the warmth and flavors of Delicious Den!**"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "title": "",
                  "source": "https://cloud-object-storage-cos-static-web-hosting-rdv.s3.jp-tok.cloud-object-storage.appdomain.cloud/delicious_den.jpg",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_922"
          }
        ],
        "title": "Tell me about the restaurant",
        "action": "action_48191",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_48191_intent_7406"
        },
        "variables": [
          {
            "title": "**Welcome to Delicious Den! Our restaurant, founded by a passion",
            "privacy": {
              "enabled": false
            },
            "variable": "step_922",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_826",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "At Delicious Den, we offer a diverse and mouth-watering menu featuring a variety of dishes made from fresh, local produce.\n\n<br />\n\n\n\nPlease select one section to Explore:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Snacks",
                      "value": {
                        "input": {
                          "text": "Snacks"
                        }
                      }
                    },
                    {
                      "label": "Main course",
                      "value": {
                        "input": {
                          "text": "Main course"
                        }
                      }
                    },
                    {
                      "label": "Drinks",
                      "value": {
                        "input": {
                          "text": "Drinks"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_20155",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_826",
            "next_step": "step_915"
          },
          {
            "step": "step_915",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "At Delicious Den we have snack options right now. \n\nPlease select one to Explore about:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Hot Dog",
                      "value": {
                        "input": {
                          "text": "Hot Dog"
                        }
                      }
                    },
                    {
                      "label": "Burger",
                      "value": {
                        "input": {
                          "text": "Burger"
                        }
                      }
                    },
                    {
                      "label": "French Fries",
                      "value": {
                        "input": {
                          "text": "French Fries"
                        }
                      }
                    },
                    {
                      "label": "Sandwich",
                      "value": {
                        "input": {
                          "text": "Sandwich"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_18384",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_915",
            "condition": {
              "eq": [
                {
                  "variable": "step_826"
                },
                {
                  "value": "Snacks",
                  "from_entity": "entity_20155"
                }
              ]
            },
            "next_step": "step_728"
          },
          {
            "step": "step_728",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "At Delicious Den we have 4 main course options. \n\nPlease select one:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Punjabi Thali",
                      "value": {
                        "input": {
                          "text": "Punjabi Thali"
                        }
                      }
                    },
                    {
                      "label": "Mexican Bowl",
                      "value": {
                        "input": {
                          "text": "Mexican Bowl"
                        }
                      }
                    },
                    {
                      "label": "Chinese Platter",
                      "value": {
                        "input": {
                          "text": "Chinese Platter"
                        }
                      }
                    },
                    {
                      "label": "Dosa Combo",
                      "value": {
                        "input": {
                          "text": "Dosa Combo"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_41420",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_728",
            "condition": {
              "eq": [
                {
                  "variable": "step_826"
                },
                {
                  "value": "Main course",
                  "from_entity": "entity_20155"
                }
              ]
            },
            "next_step": "step_183"
          },
          {
            "step": "step_183",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "At Delicious Den we have 4 options for Drinks.\n\nPlease select one to Explore:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Hot Tea",
                      "value": {
                        "input": {
                          "text": "Hot Tea"
                        }
                      }
                    },
                    {
                      "label": "Hot Coffee",
                      "value": {
                        "input": {
                          "text": "Hot Coffee"
                        }
                      }
                    },
                    {
                      "label": "Iced Tea",
                      "value": {
                        "input": {
                          "text": "Iced Tea"
                        }
                      }
                    },
                    {
                      "label": "Cold Coffee",
                      "value": {
                        "input": {
                          "text": "Cold Coffee"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_12341",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_183",
            "condition": {
              "eq": [
                {
                  "variable": "step_826"
                },
                {
                  "value": "Drinks",
                  "from_entity": "entity_20155"
                }
              ]
            },
            "next_step": "step_212"
          },
          {
            "step": "step_212",
            "output": {
              "generic": [
                {
                  "title": "",
                  "source": "https://cloud-object-storage-cos-static-web-hosting-rdv.s3.jp-tok.cloud-object-storage.appdomain.cloud/Chat-Bot%20Resources/Chat-Bot%20Resources/images/burger.jpg",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Delicious Den's Burgers are made with a juicy patty with fresh lettuce, tomato, and cheese, served in a soft bun.\n\n**Approx Weight:** 350 gms (Serves 1)"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Calories:** 300 Kcal\n\n**Price:** 50 Rs\n\nClick [***here*** ](https://cloud-object-storage-cos-static-web-hosting-rdv.s3.jp-tok.cloud-object-storage.appdomain.cloud/Chat-Bot%20Resources/Chat-Bot%20Resources/index.html)to order your Burger"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_212",
            "condition": {
              "eq": [
                {
                  "variable": "step_915"
                },
                {
                  "value": "Burger",
                  "from_entity": "entity_18384"
                }
              ]
            },
            "next_step": "step_459"
          },
          {
            "step": "step_459",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Do you want to explore more items in the menu?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_459",
            "next_step": "step_464"
          },
          {
            "step": "step_464",
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_826"
                },
                {
                  "variable": "step_915"
                },
                {
                  "variable": "step_728"
                },
                {
                  "variable": "step_183"
                },
                {
                  "variable": "step_212"
                },
                {
                  "variable": "step_459"
                }
              ]
            },
            "variable": "step_464",
            "condition": {
              "eq": [
                {
                  "variable": "step_459"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_137"
          },
          {
            "step": "step_137",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thank you for checking out the menu at Delicious Den. We are delighted to offer a variety of mouth watering dishes!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_137",
            "condition": {
              "eq": [
                {
                  "variable": "step_459"
                },
                {
                  "scalar": "no"
                }
              ]
            }
          }
        ],
        "title": "I want to see the menu",
        "action": "action_12201",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_12201_intent_23253"
        },
        "variables": [
          {
            "title": "Thank you for checking out the menu at Delicious Den. We are del",
            "privacy": {
              "enabled": false
            },
            "variable": "step_137",
            "data_type": "any"
          },
          {
            "title": "At Delicious Den we have 4 options for Drinks. Please select one",
            "privacy": {
              "enabled": false
            },
            "variable": "step_183",
            "data_type": "any"
          },
          {
            "title": "Delicious Den's Burgers are made with a juicy patty with fresh l",
            "privacy": {
              "enabled": false
            },
            "variable": "step_212",
            "data_type": "any"
          },
          {
            "title": "Do you want to explore more items in the menu?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_459",
            "data_type": "yes_no"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_464",
            "data_type": "any"
          },
          {
            "title": "At Delicious Den we have 4 main course options. Please select on",
            "privacy": {
              "enabled": false
            },
            "variable": "step_728",
            "data_type": "any"
          },
          {
            "title": "At Delicious Den, we offer a diverse and mouth-watering menu fea",
            "privacy": {
              "enabled": false
            },
            "variable": "step_826",
            "data_type": "any"
          },
          {
            "title": "At Delicious Den we have snack options right now. Please select ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_915",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_48191",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      }
    ],
    "intents": [
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "I would like to speak to someone"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          }
        ],
        "description": "Please transfer me to an agent"
      },
      {
        "intent": "action_48191_intent_7406",
        "examples": [
          {
            "text": "What are the restaurant timings?"
          },
          {
            "text": "Are you open for breakfast?"
          },
          {
            "text": "Do you deliver food?"
          },
          {
            "text": "How many locations do you have?"
          },
          {
            "text": "Where do you source your produce from?"
          },
          {
            "text": "What's your story?"
          },
          {
            "text": "I want to know about you"
          },
          {
            "text": "Tell me about the restaurant"
          }
        ]
      },
      {
        "intent": "action_12201_intent_23253",
        "examples": [
          {
            "text": "What food do you offer?"
          },
          {
            "text": "Can I get the menu please"
          },
          {
            "text": "What dishes do you have?"
          },
          {
            "text": "What do you have for food?"
          },
          {
            "text": "I want to see the menu"
          }
        ]
      }
    ],
    "entities": [
      {
        "entity": "sys-yes-no",
        "values": []
      },
      {
        "entity": "entity_41420",
        "values": [
          {
            "type": "synonyms",
            "value": "Dosa Combo",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Chinese Platter",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Mexican Bowl",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Punjabi Thali",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_18384",
        "values": [
          {
            "type": "synonyms",
            "value": "Hot Dog",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "French Fries",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Sandwich",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Burger",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_20155",
        "values": [
          {
            "type": "synonyms",
            "value": "Snacks",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Main course",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Drinks",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "entity_12341",
        "values": [
          {
            "type": "synonyms",
            "value": "Cold Coffee",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Iced Tea",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Hot Coffee",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Hot Tea",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      },
      "skill": {
        "counts": {
          "actions": 6,
          "intents": 3,
          "entities": 7,
          "data_types": 0,
          "collections": 0,
          "global_variables": 0
        }
      }
    },
    "variables": [],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "slot_filling": {
          "enabled": false
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false,
    "language": "en"
  },
  "description": "created for assistant 9b7ccb39-3516-4aac-bd3c-582c90bd5ab4",
  "dialog_settings": {
    "source_assistant": "13a8bb1e-d97b-4a75-ab9c-64c6896b9210"
  },
  "created": "2024-06-26T04:50:42.225Z",
  "updated": "2024-06-26T04:50:42.225Z",
  "snapshot": "1",
  "assistant_id": "9b7ccb39-3516-4aac-bd3c-582c90bd5ab4",
  "assistant_references": [
    {
      "name": "FoodieBot",
      "assistant_id": "13a8bb1e-d97b-4a75-ab9c-64c6896b9210",
      "skill_reference": "actions skill"
    }
  ]
}